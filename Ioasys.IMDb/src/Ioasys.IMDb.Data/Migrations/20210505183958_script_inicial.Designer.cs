// <auto-generated />
using System;
using Ioasys.IMDb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ioasys.IMDb.Data.Migrations
{
    [DbContext(typeof(IMDbContext))]
    [Migration("20210505183958_script_inicial")]
    partial class script_inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ioasys.IMDb.Domain.Models.Administrador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("NivelAcesso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Administradores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e1c2016-3039-466c-b3a8-d09a50aad01d"),
                            Ativo = true,
                            Login = "admin",
                            NivelAcesso = 1,
                            Nome = "Administrador de teste",
                            Senha = "123456"
                        });
                });

            modelBuilder.Entity("Ioasys.IMDb.Domain.Models.Filme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Diretor")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Filmes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52c718c9-a600-4957-8f60-c06475084df6"),
                            Diretor = "Michel Hazanavicius",
                            Genero = "Romance/Drama",
                            Nome = "O Artista"
                        },
                        new
                        {
                            Id = new Guid("e601cb2b-182c-45ba-b4eb-3f30424d852b"),
                            Diretor = "Michel Hazanavicius",
                            Genero = "Guerra/Drama",
                            Nome = "Apocalypse Now"
                        },
                        new
                        {
                            Id = new Guid("93d1fd81-586b-4d37-a70d-a18528f47267"),
                            Diretor = "Stephen Frears",
                            Genero = "Drama/Filme histórico",
                            Nome = "A Rainha"
                        },
                        new
                        {
                            Id = new Guid("6718fae1-c21b-46c5-b7d4-d0f9049f8032"),
                            Diretor = "Danny Boyle",
                            Genero = "Drama/Sobrevivência",
                            Nome = "127 Horas"
                        },
                        new
                        {
                            Id = new Guid("62c2366d-9601-40ec-9a9d-cc7ae7eaf6c6"),
                            Diretor = "Ethan Coen, Joel Coen",
                            Genero = "Comédia/Drama",
                            Nome = "Um Homem Sério"
                        },
                        new
                        {
                            Id = new Guid("6628a83c-64c6-41a6-9180-e1fd7c250ad1"),
                            Diretor = "Barry Levinson",
                            Genero = "Drama/Melodrama",
                            Nome = "Rain Man"
                        },
                        new
                        {
                            Id = new Guid("75cb8257-3992-4835-a0c9-a63cb711dad5"),
                            Diretor = "Ingmar Bergman",
                            Genero = "Drama/Obra de Época",
                            Nome = "Gritos e Sussurros"
                        },
                        new
                        {
                            Id = new Guid("38fc695b-16c8-45fd-b753-455acc1f9fd1"),
                            Diretor = "Michel Hazanavicius",
                            Genero = "Romance/Drama",
                            Nome = "O Piano"
                        },
                        new
                        {
                            Id = new Guid("968182ed-1f8b-4fd2-b985-532dc3bbcbe4"),
                            Diretor = "Joe Wright",
                            Genero = " Guerra/Drama",
                            Nome = "O Destino de Uma Nação"
                        },
                        new
                        {
                            Id = new Guid("d73b7efd-42f9-4979-ae2e-7e93158efb4a"),
                            Diretor = "Francis Ford Coppola",
                            Genero = "Thriller/Mistério",
                            Nome = "A Conversação"
                        },
                        new
                        {
                            Id = new Guid("2f15c877-d674-49d1-aa0e-4fdbb51f7418"),
                            Diretor = "Ang Lee",
                            Genero = "Crime/Drama",
                            Nome = "Los Angeles - Cidade Proibida"
                        },
                        new
                        {
                            Id = new Guid("7dc9f072-bdb5-462d-9a85-4e8a5566412a"),
                            Diretor = "Michel Hazanavicius",
                            Genero = "Romance/Drama",
                            Nome = "O Segredo de Brokeback Mountain"
                        });
                });

            modelBuilder.Entity("Ioasys.IMDb.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("NivelAcesso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1abd2d05-070f-4e17-927d-a7f21a5a5b04"),
                            Ativo = true,
                            Login = "user",
                            NivelAcesso = 2,
                            Nome = "Usuário de teste",
                            Senha = "123456"
                        });
                });

            modelBuilder.Entity("Ioasys.IMDb.Domain.Models.Voto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FilmeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Votos");
                });

            modelBuilder.Entity("Ioasys.IMDb.Domain.Models.Voto", b =>
                {
                    b.HasOne("Ioasys.IMDb.Domain.Models.Filme", "Filme")
                        .WithMany("Votos")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ioasys.IMDb.Domain.Models.Usuario", "Usuario")
                        .WithMany("Votos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
